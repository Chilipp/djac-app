"""
Django settings for the djac-app project.

Generated by 'django-admin startproject' using Django 3.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from email.utils import getaddresses
from pathlib import Path
from typing import List

import academic_community
import environ

env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

COMMUNITY_ABBREVIATION = "community"

COMMUNITY_NAME = "Academic Community"


READ_DOT_ENV_FILE = env.bool("DJANGO_READ_DOT_ENV_FILE", default=False)
if READ_DOT_ENV_FILE:
    # OS environment variables take precedence over variables from .env
    env.read_env(str(BASE_DIR / ".env"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env(
    "DJANGO_SECRET_KEY",
    default="django-insecure-+_fai#*zi53=1w^y6hdai0spid)bvw2&$p=o952urq(iha2}",
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", False)


if env.list("ALLOWED_HOSTS", default=[]):
    ALLOWED_HOSTS: List[str] = env.list("ALLOWED_HOSTS")


ROOT_URL = env("ROOT_URL", default="http://localhost:8000")

# login to the members profile
LOGIN_REDIRECT_URL = "/members/profile/"
LOGIN_URL = "/members/login/"

# Application definition

INSTALLED_APPS = academic_community.INSTALLED_APPS + [
    "daphne",
    "django.contrib.admin",
    "django.contrib.sitemaps",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = academic_community.MIDDLEWARE

AUTHENTICATION_BACKENDS = list(academic_community.AUTHENTICATION_BACKENDS)

ROOT_URLCONF = "main.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": academic_community.context_processors
            + [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# ADMINS="Philipp S. Sommer <philipp.sommer@hereon.de>"
ADMINS = getaddresses(env.list("ADMINS", default=[]))

# MANAGERS="Philipp S. Sommer <philipp.sommer@hereon.de>"
MANAGERS = getaddresses(env.list("MANAGERS", default=[]))

ENABLED_EMAILS_FOR_NOTIFICATION = (
    getaddresses(env.list("ENABLED_EMAILS_FOR_NOTIFICATION", default=[]))
    or None
)

NOTIFICATIONS_DISABLED = env.bool("NOTIFICATIONS_DISABLED", default=False)

VAPID_PUBLIC_KEY = env("VAPID_PUBLIC_KEY", default="")
VAPID_PRIVATE_KEY = env("VAPID_PRIVATE_KEY", default="")
VAPID_ADMIN_EMAIL = env("VAPID_ADMIN_EMAIL", default="")

SITE_ID = env.int("SITE_ID", default=1)

# require authentification for rest API
REST_FRAMEWORK = academic_community.REST_FRAMEWORK

WSGI_APPLICATION = "main.wsgi.application"

ASGI_APPLICATION = "main.asgi.application"

# Email settings
SERVER_EMAIL = env("SERVER_EMAIL", default="no-reply.community@hereon.de")
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL", default=SERVER_EMAIL)

EMAIL_CONFIG = env.email(
    "EMAIL_URL", default="consolemail://user:password@localhost:25"
)

vars().update(EMAIL_CONFIG)

EMAIL_SUBJECT_PREFIX = "[community] "


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": env.db_url(
        "DATABASE_URL", default="sqlite:///%s/db.sqlite3" % BASE_DIR
    )
}


CACHES = {
    "default": env.cache(default="dummycache://"),
    "select2": env.cache_url("SELECT2_CACHE_URL", default="dummycache://"),
}

SELECT2_CACHE_BACKEND = "select2"


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [
                env("CHANNELS_REDIS_URL", default="redis://redis:6379/2")
            ],
        },
    },
}

MATERIAL_MAX_UPLOAD_SIZE = env.int(
    "MATERIAL_MAX_UPLOAD_SIZE", default=26214400
)


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",  # noqa: E501
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",  # noqa: E501
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",  # noqa: E501
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",  # noqa: E501
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en"

TIME_ZONE = "CET"

USE_I18N = True

USE_L10N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

STATIC_ROOT = BASE_DIR / "staticfiles"

BASE_MEDIA = Path(env("BASE_MEDIA_FOLDER", default=str(BASE_DIR / "media")))

MEDIA_ROOT = BASE_MEDIA / "public"

MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

if not DEBUG:
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

ADMIN_LOCATION = env("ADMIN_LOCATION", default="admin/")

# CMS settings
LANGUAGES = academic_community.LANGUAGES

CMS_LANGUAGES = academic_community.CMS_LANGUAGES

CMS_TEMPLATES = academic_community.CMS_TEMPLATES

X_FRAME_OPTIONS = academic_community.X_FRAME_OPTIONS

CMS_PERMISSION = academic_community.CMS_PERMISSION

CMS_PLACEHOLDER_CONF = academic_community.CMS_PLACEHOLDER_CONF

THUMBNAIL_PROCESSORS = academic_community.THUMBNAIL_PROCESSORS

CMS_TOOLBAR_ANONYMOUS_ON = academic_community.CMS_TOOLBAR_ANONYMOUS_ON

CMS_TOOLBAR_HIDE = academic_community.CMS_TOOLBAR_HIDE

PRIVATE_STORAGE_ROOT = str(BASE_MEDIA.absolute() / "internal")
PRIVATE_STORAGE_AUTH_FUNCTION = (
    academic_community.PRIVATE_STORAGE_AUTH_FUNCTION
)

SYMPA_USER = env("SYMPA_USER", default="")
SYMPA_PASSWD = env("SYMPA_PASSWD", default="")

COMMUNITY_MEMBER_REGISTRATION = env.bool(
    "COMMUNITY_MEMBER_REGISTRATION", default=False
)
